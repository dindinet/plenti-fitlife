import{env}from"../../generated/env.js";const repoUrl=env.cms.repo?new URL(env.cms.repo):new URL("https://gitlab.com"),apiBaseUrl=`${repoUrl.origin}/api/v4`,capitalizeFirstLetter=e=>e.charAt(0).toUpperCase()+e.slice(1);export async function publish(e,t,n,s,o){if(await userAvailable,!o.isAuthenticated)throw new Error("Authentication required");const r=repoUrl.pathname.slice(1),h=`${apiBaseUrl}`+`/projects/${encodeURIComponent(r)}`+"/repository/commits",c={"Content-Type":"application/json",Authorization:`Bearer ${o.tokens.access_token}`},l=e=>e.split(",")[1];let a=[];e.forEach(e=>{a.push({action:n,file_path:e.file,encoding:s,content:s==="base64"?l(e.contents):e.contents})});let d=capitalizeFirstLetter(n)+" "+(e.length>1?e.length+" files":e[0].file);const u={branch:env.cms.branch,commit_message:d,actions:a},i=await fetch(h,{method:"POST",headers:c,body:JSON.stringify(u)});if(i.ok)(n==="create"||n==="update")&&t?.onSave?.(),n==="delete"&&(t?.onDelete?.(),history.pushState(null,"",env.baseurl&&!env.local?env.baseurl:"/"));else{const{error:e,message:t}=await i.json();throw new Error(`Publish failed: ${e||t}`)}}